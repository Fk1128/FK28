--사원테이블에서 직종 , 평균급여를 출력하되
-- 평균급여가 bruce보다 큰 경우만 조회

SELECT JOB_ID , AVG(SALARY) 
FROM EMPLOYEES
GROUP BY JOB_ID 
HAVING AVG(SALARY) > (SELECT SALARY
FROM EMPLOYEES  
WHERE FIRST_NAME = 'Bruce');


-- 사원 테이블에서 성에 'bat'을 포함하는 사원과 같은 부서에서 근무하는 사원들의 부서번호 ,이름을출력

SELECT DEPARTMENT_ID , FIRST_NAME 
FROM EMPLOYEES 
WHERE DEPARTMENT_ID =(SELECT DEPARTMENT_ID  
					FROM EMPLOYEES 
					WHERE LAST_NAME LIKE '%Bat%') ;
					
				
-- 사원테이블에서 100번 부서의 최소급여보다 많이받는 다른부서의 부서번호, 최소급여를 조회하세요
				
SELECT DEPARTMENT_ID , MIN(SALARY) 
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID 
HAVING MIN(SALARY) > (SELECT MIN(SALARY) 
						FROM EMPLOYEES e
						WHERE DEPARTMENT_ID = 100) ;

					
SELECT *
FROM PLAYER p ;
					
					
-- PLAYER 테이블에서 TEAM_ID가 'K01'인 선수중 POSITION이 'GK' 인 선수



SELECT PLAYER_NAME 
FROM PLAYER p				
WHERE TEAM_ID = 'K01';
					
SELECT TEAM_ID 
FROM PLAYER p 
WHERE "POSITION" = 'GK';

SELECT *
FROM (SELECT * FROM PLAYER WHERE TEAM_ID = 'K01')
WHERE POSITION = 'GK';


-- PLAYER 테이블에서 전체평균키와 포지션별 평균키 구하기

SELECT   TRUNC(AVG(HEIGHT)) , "POSITION" ,TRUNC( (SELECT AVG(HEIGHT) FROM PLAYER p2))
FROM PLAYER p 
WHERE "POSITION" IS NOT NULL
GROUP BY "POSITION" ;

-- AUTO COMMIT 
-- 내가 실행하는 쿼리문이 테이블에 바로 반영
-- COMMIT 이 되면 되돌아가는것이 불가능하다 .

-- PLAYER 테이블에서 NICNAME 이 NULL인 선수들은 
-- 정태민 선수의 닉네임으로 변경하기

UPDATE PLAYER SET
NICKNAME = (SELECT NICKNAME FROM PLAYER p2 WHERE PLAYER_NAME = '정태민')
WHERE NICKNAME IS NULL;

SELECT PLAYER_NAME ,NICKNAME 
FROM PLAYER p 
WHERE NICKNAME = (SELECT NICKNAME FROM PLAYER p2 WHERE PLAYER_NAME = '정태민')


-- 사원테이블에서 평균 급여보다 낮은 사원들의 급여를 10% 인상

UPDATE EMPLOYEES SET 
SALARY = SALARY*1.1
WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES e) ;



SELECT AVG(HEIGHT) FROM PLAYER p;

-- PLAYER테이블에서 평균키보다 큰 선수들을 삭제

DELETE PLAYER WHERE HEIGHT > (SELECT AVG(HEIGHT)FROM PLAYER);

SELECT * FROM PLAYER p 
ORDER BY HEIGHT DESC ;

-- FROM절에서 쓸 때 : IN LINE VIEW
-- SELECT 절에서 사용할 때 : SCALAR
-- WHERE절에서 사용할 때 : SUB QUERY

-- 사원테이블에서 이름 연결하기

SELECT FIRST_NAME||' '||LAST_NAME 
FROM EMPLOYEES e 

-- xx의 급여는 xx이다.

SELECT  FIRST_NAME ||'의 급여는 ' || SALARY ||' 이다'  AS 급여
FROM EMPLOYEES e 


--  AS

SELECT COUNT(SALARY) AS 개수, 
		MAX(SALARY) AS 최대값,
		MIN(SALARY) AS 최소값,
		SUM(SALARY) AS 총합,
		AVG(SALARY) AS 평균
FROM EMPLOYEES e 

-- 사원테이블에서 EMPLOYEE_ID 를 사번 , FIRST_NAME을 이름, 
-- SALARY를 급여로 별칭을 주고 전체 내용 조회하기

SELECT EMPLOYEE_ID AS 사번, FIRST_NAME AS 이름, SALARY 급여 
FROM EMPLOYEES e;


-- 두개 이상의 테이블에서 컬럼을 조회할 때
-- 어떤 테이블에서 온 컬럼인지 확실하게 적어줘야한다 .
SELECT E.DEPARTMENT_ID , D.DEPARTMENT_ID 
FROM EMPLOYEES e ,DEPARTMENTS d ;

-- 사원테이블에는 부서명이 없다 .
-- 부서테이블에는 DEPARTMENT_ID 컬럼을 PK로 가지고 있다 .
-- 사원테이블에는 DEPARTMENT_ID 컬럼을 외래키로 가지고있다 .

SELECT E.FIRST_NAME , E.DEPARTMENT_ID , d.DEPARTMENT_ID  
FROM EMPLOYEES e  JOIN  DEPARTMENTS d 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ;

-- 부서테이블 , 지역테이블(location)로부터 
-- 부서명과 도시명(city)을 조회하세요

SELECT D.DEPARTMENT_NAME , L.CITY 
FROM DEPARTMENTS d JOIN LOCATIONS l
ON D.LOCATION_ID = L.LOCATION_ID ;

-- 지역테이블과, 나라테이블(contries) 를 조회하여 
-- 도시명과 국가명CONTRY_NAME을 조회

SELECT  C.COUNTRY_NAME ,L.CITY 
FROM COUNTRIES c JOIN LOCATIONS l 
ON C.COUNTRY_ID = L.COUNTRY_ID ;

-- 이름,성,직종,직업명을 조회해주세요
-- EMPLOYEES,JOBS
SELECT E.FIRST_NAME ,E.LAST_NAME ,J.JOB_ID ,J.JOB_TITLE 
FROM EMPLOYEES e JOIN JOBS j 
ON E.JOB_ID = J.JOB_ID ; -- 외래키 , 기본키로 연결된?

-- 테이블 3개 조인하기
-- 사원,부서,지역 테이블로부터 이름 ,이메일 ,부서번호 , 부서명, 지역번호 , 도시명 출력

SELECT e.FIRST_NAME , e.EMAIL  ,E.DEPARTMENT_ID ,d.DEPARTMENT_NAME ,l.LOCATION_ID, l.CITY 
FROM EMPLOYEES e JOIN DEPARTMENTS d 
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
JOIN LOCATIONS l 
ON d.LOCATION_ID = l.LOCATION_ID AND L.CITY = 'Seattle'; 
-- ON 이 WHERE 역할을 하기때문에 조건이 더 필요한경우 and 뒤에 조건을 써준다 .


SELECT * FROM EMP e ;

SELECT E2.ENAME 직원 ,E2.MGR , E1.ENAME 상사, E1.EMPNO
FROM EMP E1 JOIN EMP e2
ON E1.EMPNO = E2.MGR;]

CREATE TABLE 테이블A(
	A_ID NUMBER,
	A_NAME VARCHAR2(10)
);

CREATE TABLE 테이블B(
	B_ID NUMBER,
	B_NAME VARCHAR2(10)
);

INSERT ALL 
	INTO 테이블A values(1,'Jhon')
	INTO 테이블A values(2,'Jane')
	INTO 테이블A values(3,'Bob')
	INTO 테이블B values(101,'Apple')
	INTO 테이블B values(102,'banana')
SELECT * FROM dual;

SELECT *FROM 테이블A; --3
SELECT *FROM 테이블b; --2 

SELECT * FROM 테이블A CROSS JOIN 테이블B;

-- 사원테이블과 부서테이블의 LEFT OUTER JOIN을 이용하여 
-- 사원이 어느 부서에 있는지 조회하기


SELECT FIRST_NAME ,DEPARTMENT_NAME
FROM EMPLOYEES e LEFT OUTER JOIN DEPARTMENTS d 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ;

-- 사원테이블과 부서테이블의 RIGHT OUTER JOIN을 이용하여
-- 사원이 어느 부서에 있는지 조회하기

SELECT FIRST_NAME ,DEPARTMENT_NAME
FROM EMPLOYEES e RIGHT OUTER JOIN DEPARTMENTS d 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ;


SELECT FIRST_NAME ,DEPARTMENT_NAME
FROM EMPLOYEES e FULL OUTER JOIN DEPARTMENTS d 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ;

-- TEAM테이블과 STADIUM 테이블을 통해 홈팀이 있는 구장만
-- 팀이름과 구장 이름으로 조회


SELECT T.TEAM_NAME ,S.STADIUM_NAME 
FROM TEAM t JOIN STADIUM s 
ON T.STADIUM_ID = S.STADIUM_ID ;

SELECT T.TEAM_NAME ,S.STADIUM_NAME 
FROM TEAM t LEFT OUTER JOIN STADIUM s
ON T.TEAM_ID =S.HOMETEAM_ID ;

SELECT T.TEAM_NAME ,S.STADIUM_NAME 
FROM TEAM t RIGHT OUTER JOIN STADIUM s
ON T.TEAM_ID =S.HOMETEAM_ID 
-- 누가 얼마받는지에 대한 조

CREATE VIEW MY_EMPL AS(
SELECT EMPLOYEE_ID ,FIRST_NAME ,SALARY 
FROM EMPLOYEES 
);



-- 뷰 이름 : DATA_PLUS
-- 사원테이블에서 급여를 많이받는 순으로 순위와 이름, 급여를 조회하는 쿼리 넣기


CREATE VIEW DATA_PLUS AS(
SELECT RANK() OVER(ORDER BY SALARY DESC)AS 급여순위 , E.FIRST_NAME,E.SALARY 
FROM EMPLOYEES E  
) ;

SELECT *FROM DATA_PLUS;

-- PLAYER테이블 뒤에 TEAM_NAME 컬럼을 추가한 VIEW 만들기
-- JOIN을 사용하면 됨 
-- 뷰이름 : PLAYER_TEAM_NAME
CREATE VIEW PLAYER_TEAM_NAME AS(
SELECT P.*,TEAM_NAME
FROM PLAYER p JOIN TEAM t
ON P.TEAM_ID = T.TEAM_ID
);



SELECT * FROM PLAYER_TEAM_NAME  ;

-- HOMETEAM_ID, STADIUIM_NAME TEAM_NAME을 조회
-- 홈팀이 없는 경기장도 검색하기
-- 뷰이름 : STADIUM_INFO

CREATE OR REPLACE VIEW STADIUM_INFO AS(
SELECT S.HOMETEAM_ID , S.STADIUM_NAME,	T.TEAM_NAME 
FROM TEAM t RIGHT OUTER JOIN STADIUM s 
ON S.STADIUM_ID = T.STADIUM_ID
);


-- 홈팀이 없는 경기장을 검색하세요 

SELECT STADIUM_NAME
FROM STADIUM_INFO
WHERE HOMETEAM_ID IS NULL;




-- EMPLOYEES 테이블에서 JOB_ID 가 'IT_PROG'인 사람의 이름을
-- 자신의 이름으로 바꾸기

UPDATE EMPLOYEES SET 
FIRST_NAME = 'Diana'
WHERE LAST_NAME = 'Lorentz';

SELECT FIRST_NAME ,LAST_NAME 
FROM EMPLOYEES e 
WHERE JOB_ID ='IT_PROG';
























