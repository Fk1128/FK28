switch 

	- if 문과 비슷하지만 조건식이 들어가야 하는것과 달리
	- switch에 조건으로 들어갈 수 있는 연산자는 '=='에 없다.
	- 즉 , 두개의 피연산자 값이 같을때만 조건으로 활용할 수 있다 .

		switch (비교값){
		case 조건값1 : 
			비교값과 조건값 1 이 일치할때 실행할 명령
			break; 
		case 조건값2 : 
		 	비교값과 조건값 2 이 일치할때 실행할 명령
			break;	 
		case 조건값3 : 
		 	비교값과 조건값 3 이 일치할때 실행할 명령
			break;
		default : 
			비교값과 일치하는 조건값이 없을 때 실행할 명령 ; 
			break;
		} 
	
		switch (비교값){
		case 조건값1, 2, 3, 4 ->  비교값과 조건값 1,2,3,4 이 일치할때 실행할 명령

반복문
	-특정수행문을 원하는만큼 반복하여 실행하는 제어문
		

	반복문의 종류
	- for , while
		
	for문 
	- 주로 반복횟수가 정해져있을때 사용하는 문법
		for(초기식; 조건식 ; 증감식 ; ) {
			조건식에 해당할 때 반복하고싶은 명령 (참일때) , 조건식에 해당하지 않을때 종료?
			-명령은 여러개일수 있다 			
			ex) 산술연산을 해라 , 대입해라 , 출력해라 , 조건을 비교해라
		
		초기식 : 반복을 하기위한 시작값으로 변수를 하나 초기화 한다 .
		조건식 : 반복을 하기 위한 종료값으로 비교연산자를 많이 사용한다 .
		증감식 : 초기식의 변수의 값을 증감시켜주는 역할을 한다 증감연산자를 많이 사용한다 .
		(※후행증감이나 선행증감이나 영향은 없지만 개발자들이 다들 후행증감을 사용하므로 후행증감으로 사용하도록 하자.)
		
		

	다중 for문 
	- for 문안에 또 다른 for 문을 사용하는 경우를 말한다 .
	- for 문을 중첩하여 사용하기 때문에 코드가 어려워 보일수는 있으나 ,
	반복문의 작동원리와 같다 .

		for (초기식 ; 조건식 ; 증감식 ) {
			for( 초기식 ; 조건식 ; 증감식 ) {
			}
		}.

while문
	-for 문은 정해진 횟수만큼 반복을 하는 문법
	-while문은 반복획수가 정해져 있지 않고 ,조건식이 true 일 경우 계속해서 반복하는 문법
	-주의하지 않으면 무한루프에 빠질수 있다 .
	while (조건식) {
		조건식이 참일때 반복할 명령 
	}

	while문은 for문처럼 시작값과 증감값을 가지고 있지 않기 때문에 값을 변화시켜주지 않으면 무한반복이 일어나게된다.

do-while 문 

	- while문과 같이 조건을 만족할 때까지 반복한다.
	- 다만, while문과 다른 점은 먼저 루프를 한 번 실행한 후 조건식을 검사한다는 점이다.
	- 즉, 조건식의 결과와 상관없이 무조건 한 번은 실행을 한다.
	
	- 기본형
		do{
			반복하고자 하는 명령 
		} while (조건식) ;

상황에 따라 반복문 사용하기
반복횟수가 지정되는 경우 -> 횟수를 만족할 때 까지 반복
ex) 물통에 물을 10번 채워라 -> for문
특정 조건이 부여되는 경우 -> 조건이 만족할 때까지 반복(물이 다 차기 전까지)
ex) 물통에 물이 가득 찰 때까지 채워라 -> while문
특정 조건과 옵션이 부여되는 경우 -> 한 번 실행한 후 반복 여부 판단
ex) 물통에 물을 따라보고 새지 않으면 끝까지 채워라 -> do - while문


기타제어문

	- 기타 제어문 바로 아래는 어떠한 코드도 올 수 없다 .
	- 반복문 안에서만 사용이 가능하다 .
	- 다중반복문일때 기타제어문을 가지고 있는 반복문에 대해서만 적용이 된다 .

		continue ; 가장 가까운 반복문의 증감식으로 이동
		break;  해당되는 반복문만 중단 .














