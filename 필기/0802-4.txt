do-while 문 

	- while문과 같이 조건을 만족할 때까지 반복한다.
	- 다만, while문과 다른 점은 먼저 루프를 한 번 실행한 후 조건식을 검사한다는 점이다.
	- 즉, 조건식의 결과와 상관없이 무조건 한 번은 실행을 한다.
	
	- 기본형
		do{
			반복하고자 하는 명령 
		} while (조건식) ;

상황에 따라 반복문 사용하기
	반복횟수가 지정되는 경우 -> 횟수를 만족할 때 까지 반복
	ex) 물통에 물을 10번 채워라 -> for문
	특정 조건이 부여되는 경우 -> 조건이 만족할 때까지 반복(물이 다 차기 전까지)
	ex) 물통에 물이 가득 찰 때까지 채워라 -> while문
	특정 조건과 옵션이 부여되는 경우 -> 한 번 실행한 후 반복 여부 판단
	ex) 물통에 물을 따라보고 새지 않으면 끝까지 채워라 -> do - while문


기타제어문

	- 기타 제어문 바로 아래는 어떠한 코드도 올 수 없다 .
	- 반복문 안에서만 사용이 가능하다 .
	- 다중반복문일때 기타제어문을 가지고 있는 반복문에 대해서만 적용이 된다 .

		continue ; 가장 가까운 반복문의 증감식으로 이동
		break;  해당되는 반복문만 중단 .



배열(Array)
	- 같은 자료형의 변수를 지정하여 여러 데이터를 저장할 수 있는  저장공간을 의미한다 .
	- 여러개의 데이터를 한번에 담을 수 있는 구조를 자료구조라고 한다 .
	- 배열을 사용하면 같은 자료형의 데이터를 효율적으로 다룰 수 있다 .

	배열이 필요한 이유 
		- 10개의 데이터를 저장하려면 해당 자료형의 변수를 10개 만들어 저장해야한다 .
		- 데이터가 많아질수록 관리를 하기 힘들어진다 .


	배열의 선언 
	자료형 [] 배열명 ;
	자료형 배열명 [];
		- 대괄호는 배열의 연산자를 의미한다
		- 자료형 뒤에 붙이거나 변수명 뒤에 붙이면 해당 자료형은 배열이라는 의미로 선언된다 .
		- 자료형 뒤에 붙이는것이 가독성이 좋아 자주 사용된다 -- 자료형 [ ] 배열명 ;

	null
	
	- 변수를 만들 때 값을 부여하지 않으면 시스템이 타입에 맞는 불특정값을 부여하게 된다 .
	- 배열의 경우 여러 개의 데이터를 저장하기 위한 별도의 공간이 필요하다 .
	- 배열을 선언만 하고 생성하지 않을 경우 , 시스템은 배열을 만들 때 null 이라는 키워드를 부여한다
	- null의 의미는 "없다" 라는 의미를 가진다
	- 배열 변수는 만들어졌지만 , 그 안에 값을 담을 공간들이 생성되지 않았다는 뜻이다 .

	배열의 생성 
	
		- 배열을 선언한 후 여러개의 데이터를 저장하기 위해서  
		먼저 메모리의 공간을 확보하기 위해 생성을 해야한다 .
		- 프로그래밍에서는 뭔가를 기억할때 메모리를 사용해야한다 .
		- 배열은 데이터를 저장하기 위한 공간이 필요하므로 메모리에 필요한 만큼 공간을 만들도록 선언해야한다 .
		- 배열을 생성하기 위해서는 'new' 라는 연산자와 함께 자료형의 길이를 지정해야한다 .




